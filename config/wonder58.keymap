
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define COLMAK 0
#define QWERTY 1
#define LOWER 2
#define UPPER 3
#define SETT 4

/ {
    behaviors {
        del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer { // Layer 0
            display-name = "Colemak";
            bindings = <
                &kp GRAVE &kp N1 &kp N2 &kp N3   &kp N4    &kp N5       		&kp N6   &kp N7    &kp N8    &kp N9  &kp N0    &kp BSPC
                &kp TAB   &kp Q  &kp W  &kp F    &kp P     &kp B 				&kp J    &kp L     &kp U     &kp Y   &kp SEMI  &kp BSLH
                &kp ESC   &kp A  &kp R  &kp S    &kp T     &kp G   				&kp M    &kp N     &kp E     &kp I   &kp O     &kp APOS
                &kp LSHFT &kp Z  &kp X  &kp C    &kp D     &kp V 			    &kp K    &kp H     &kp COMMA &kp DOT &kp SLASH &kp RSHIFT
                &kp LCTRL &mo LOWER 		&kp LALT &kp SPACE &kp LWIN     &kp ENTER &del &mo UPPER 		         &kp RWIN  &kp RCTL
            >;
        };

        QWERTY { // Layer 0
            display-name = "QWERTY";
            bindings = <
                &kp GRAVE &kp N1 &kp N2 &kp N3   &kp N4    &kp N5       		&kp N6   &kp N7    &kp N8    &kp N9  &kp N0    &kp BSPC
                &kp TAB   &kp Q  &kp W  &kp E    &kp R     &kp T 				&kp Y    &kp U     &kp I     &kp O   &kp P     &kp BSLH
                &kp ESC   &kp A  &kp S  &kp D    &kp F     &kp G   				&kp H    &kp J     &kp K     &kp L   &kp SEMI  &kp APOS
                &kp LSHFT &kp Z  &kp X  &kp C    &kp V     &kp B 			    &kp N    &kp M     &kp COMMA &kp DOT &kp SLASH &kp RSHIFT
                &kp LCTRL &mo LOWER 		&kp LALT &kp SPACE &kp LWIN     &kp ENTER &del &mo UPPER 		         &kp RWIN  &kp RCTL
            >;
        };

        lower { 
            display-name = "Lower";
            bindings = <
                &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6          &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
                &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  
                &trans  &trans          &trans  &trans  &trans          &trans  &trans  &trans          &trans  &trans  
            >;
        };

        upper { 
            display-name = "Upper";
            bindings = <
                &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6          &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
                &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans  &trans  &trans  &trans          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans  
                &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  
                &trans  &trans          &trans  &trans  &trans          &trans  &trans  &trans          &trans  &trans  
            >;
        };

        settings {
            display-name = "Settings";
            bindings = <
                &tog QWERTY  &none  &none  &none  &none  &out OUT_USB    &out OUT_BLE  &none  &none  &none  &none  &studio_unlock  
                &none  &none  &none  &none  &none  &bt BT_SEL 0    &bt BT_SEL 1  &none  &none  &none  &none  &none  
                &none  &none  &none  &none  &none  &bt BT_SEL 2    &bt BT_SEL 3  &none  &none  &none  &none  &none  
                &none  &none  &none  &none  &none  &bt BT_SEL 4    &bt BT_CLR  &none  &none  &none  &none  &none  
                &none  &trans          &none  &none  &none          &none  &none  &trans          &none  &none  
            >;
        };
    };
 };

    /*
     *  0    1   2   3   4   5       6   7   8   9  10  11
     * 12   13  14  15  16  17      18  19  20  21  22  23
     * 24   25  26  27  28  29      30  31  32  33  34  35
     * 36   37  38  39  40  41      42  43  44  45  46  47
     * 48   49      50  51  52      53  54  55      56  57
     */

 / {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER UPPER>;
            then-layer = <SETT>;
        };
    };
};